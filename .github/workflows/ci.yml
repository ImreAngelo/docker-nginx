name: Build & Publish Image

# on:
#   push:
#     branches: [main]

# permissions:
#   contents: read
#   packages: write

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      image-tag: ${{ steps.set-tag.outputs.tag }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      # - name: Set output tag
      #   id: set-tag
      #   run: echo "tag=nginx:latest" >> $GITHUB_OUTPUT

      # - name: Cache Docker layers
      #   uses: actions/cache@v4
      #   with:
      #     path: /tmp/.buildx-cache
      #     key: ${{ runner.os }}-buildx-${{ github.sha }}
      #     restore-keys: |
      #       ${{ runner.os }}-buildx-

      # - name: Build base image
      #   run: make build

      - name: Build dev image
        run: make dev

      # - name: Build image
      #   run: |
      #     docker buildx create --use
      #     docker buildx build \
      #       --load \
      #       --cache-to type=local,dest=/tmp/.buildx-cache \
      #       --cache-from type=local,src=/tmp/.buildx-cache \
      #       -t angelo/nginx:development .

      - run: docker save nginx:${GITHUB_SHA::7} -o image.tar

      - uses: actions/upload-artifact@v3
        with:
          name: nginx-latest
          path: image.tar

    push:
      needs: build
      runs-on: ubuntu-latest
      steps:
        - uses: actions/download-artifact@v3
          with:
            name: nginx-latest

        - run: docker load -i image.tar

        - name: Login to Docker Hub
          uses: docker/login-action@v3
          with:
            username: ${{ secrets.DOCKERHUB_USER }}
            password: ${{ secrets.DOCKERHUB_TOKEN }}

        - name: Tag and push image
          run: |
            docker tag nginx:${GITHUB_SHA::7} ${{ secrets.DOCKERHUB_USER }}/nginx:${GITHUB_SHA::7}
            docker push ${{ secrets.DOCKERHUB_USER }}/nginx:${GITHUB_SHA::7}

        # - name: Build and push
        #   uses: docker/build-push-action@v6
        #   with:
        #     context: .
        #     push: true
        #     tags: "<registry>/<image>:latest"
        #     cache-from: type=gha
        #     cache-to: type=gha,mode=max
        #     github-token: ${{ secrets.MY_CUSTOM_TOKEN }}
